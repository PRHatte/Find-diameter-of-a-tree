package rbk;

import rbk.BFSOO;

import java.io.File;
import java.util.Random;
import java.util.Scanner;

import rbk.Graph.Vertex;
import rbk.Graph.GraphAlgorithm;
import rbk.Graph.Factory;

public class Diameter {

	public static int diameter(Graph g) {
		
		System.out.println(g.getVertex(1));
		BFSOO b = BFSOO.breadthFirstSearch(g, g.getVertex(1));
		int maxDistance = 0;
		System.out.println(maxDistance);
		Vertex newSRC = null;
		int d = 0;
		
		for (Vertex u : g) {
			d = b.getDistance(u);
			System.out.println("src: " + g.getVertex(1) + " u "  + u + " dist " + d);
			
			if (maxDistance < d) {
				newSRC = u;
				maxDistance = d;
			}

		}

		System.out.println(" maxdist " + maxDistance + " newsrc " + newSRC);
		
		b = BFSOO.breadthFirstSearch(g, newSRC);
		int diameter = 0;

		for (Vertex u : g) {
			d = b.getDistance(u);
			System.out.println("newsrc: " + newSRC + " u "  + u + " dist " + d);
			
			diameter = Math.max(diameter, d);

		}
		return diameter;

	}

	public static void main(String[] args) throws Exception {
		String string = "8 7    1 2 2   1 3 3   2 4 5   2 5 4   4 6 1   5 7 1   7 8 2  0";
		Scanner in;
		// If there is a command line argument, use it as file from which
		// input is read, otherwise use input from string.
		in = args.length > 0 ? new Scanner(new File(args[0])) : new Scanner(string);
		// Read graph from input
		Graph g = Graph.readGraph(in);

		g.printGraph(false);
		System.out.println("diameter of g " + Diameter.diameter(g));

		
	}
}
